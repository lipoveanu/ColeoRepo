@model ColeoWeb.Models.ProjectStatusViewModel

@{
    ViewBag.Title = "Edit";


}

@Scripts.Render("~/Scripts/pick-a-color-1.2.3.min.js")
@Scripts.Render("~/Scripts/tinycolor-0.9.15.min.js")
@Styles.Render("~/Content/pick-a-color-1.2.3.min.css")


<div class="row">
    <div class="col-md-9">
        <div class="form-group row">
            <div class="col-md-12">
                <h2> <span> Edit Project Statuses </span> </h2>
            </div>
        </div>
    </div>
    <div class="col-md-1">
        <div class="form-group row">
            <div class="col-md-12">
                <button id="edit-btn" class="btn btn-default btn-sm margin-top20">
                    <span class="glyphicon glyphicon-collapse-up"> Collapse</span>
                </button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    @using (Ajax.BeginForm("Edit",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "edit-projectstatus",
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.Replace,
                            OnSuccess = "ShowList();"
                        },
                        new { @id = "edit-project-status" }))
    {
        @Html.AntiForgeryToken()

        <input type="hidden" id="Id" name="Id" value="@Model.Id" />
        @Html.HiddenFor(m => m.Order);

        <div class="col-md-12">
            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Name)
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.IsDefault)
                </div>
                <div class="col-md-5">
                    @{
                                     //Dictionary<string, object> dic = new Dictionary<string, object>();
                                     //dic.Add("data-toggle", "toggle");
                                     //dic.Add("data-onstyle", "default");

                                    @Html.CheckBoxFor(m => m.IsDefault, new { @id = "is-default" });
                    }
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Color)
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.Color, new { @class = "pick-a-color form-control", @name = "color-picker" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-8">
                    <button type="submit" id="save" class="btn btn-default btn-sm pull-right">
                        <span class="glyphicon glyphicon-floppy-save"></span> Save
                    </button>
                </div>
            </div>
        </div>
    }
</div>




<script>

    $(document).ready(function () {

        //setting up pick up color
        $(".pick-a-color").pickAColor({
            showSpectrum: true,
            showSavedColors: true,
            saveColorsPerElement: false,
            fadeMenuToggle: true,
            showHexInput: true,
            showBasicColors: true,
            allowBlank: false,
            inlineDropdown: false
        });

        // load the toggle
        $(function () {
            $('#is-default').bootstrapToggle();
        })

        

    });

    
    $(function () {
        $('#edit-project-status').submit(function () {

            if ($(this).valid()) {
                AlertSave();
            }
        });
    });


    function AlertSave() {
        $.notify('Project status saved!', {
        });
    }



</script>


