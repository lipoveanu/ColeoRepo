@model ColeoWeb.Models.ProjectStatusViewModel

@{
    ViewBag.Title = "Edit";


}

@Scripts.Render("~/Scripts/pick-a-color-1.2.3.min.js")
@Scripts.Render("~/Scripts/tinycolor-0.9.15.min.js")
@Styles.Render("~/Content/pick-a-color-1.2.3.min.css")
@Scripts.Render("~/Scripts/notify.js")
@Styles.Render("~/Content/animate.css")


<div class="row">
    <div class="col-md-9">
        <div class="form-group row">
            <div class="col-md-12">
                <h2> <span> Edit Project Statuses </span> </h2>
            </div>
        </div>
    </div>
    <div class="col-md-1">
        <div class="form-group row">
            <div class="col-md-12">
                <button id="edit-btn" class="btn btn-default btn-sm margin-top20">
                    <span class="glyphicon glyphicon-collapse-up"> Collapse</span>
                </button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    @using (Ajax.BeginForm("Edit",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "edit-projectstatus",
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.Replace,
                            OnSuccess = "ShowIndex();"
                        },
                        new { @id = "edit-project-status" }))
    {
        @Html.AntiForgeryToken()

        <input type="hidden" id="Id" name="Id" value="@Model.Id" />
        @Html.HiddenFor(m => m.Order);

        <div class="col-md-12">
            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Name)
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.IsDefault)
                </div>
                <div class="col-md-5">
                    @{
                                 //Dictionary<string, object> dic = new Dictionary<string, object>();
                                 //dic.Add("data-toggle", "toggle");
                                 //dic.Add("data-onstyle", "default");

                                @Html.CheckBoxFor(m => m.IsDefault, new { @id = "is-default" });
                    }
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Color)
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.Color, new { @class = "pick-a-color form-control", @name = "color-picker" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-8">
                    <button type="submit" id="save" class="btn btn-default btn-sm pull-right">
                        <span class="glyphicon glyphicon-floppy-save"></span> Save
                    </button>
                </div>
            </div>
        </div>
    }
</div>




<script>

    $(document).ready(function () {

        //setting up pick up color
        $(".pick-a-color").pickAColor({
            showSpectrum: true,
            showSavedColors: true,
            saveColorsPerElement: false,
            fadeMenuToggle: true,
            showHexInput: true,
            showBasicColors: true,
            allowBlank: false,
            inlineDropdown: false
        });

        // load the toggle
        $(function () {
            $('#is-default').bootstrapToggle();
        })

    });

    function ShowIndex() {
        // re post the list with the updated item
        $.ajax({
            type: "GET",
            url: '@Url.Action("List", "ProjectStatus")',
            success: function (response) {
                $("#index-projectstatus").html(response);
            },
            error: function () {
                alert("error occured");
            }
        });

        // validate form for alert 
        $.validator.unobtrusive.parse($("#edit-projectstatus"));
    }

    $(function () {
        $('#edit-project-status').submit(function () {
            
            if ($(this).valid()) {
                AlertSave();
            }
        });
    });


    function AlertSave() {

        $(".alert").alert();
        $("#success-alert").fadeTo(2000, 1000).slideUp(500, function () {
            $("#success-alert").slideUp(500);
        });

        $.notify({
            // options
            message: 'Saved'
        }, {
            // settings
            type: "base",
            allow_dismiss: true,
            placement: {
                from: "top",
                align: "right"
            },
            delay: 90000,
            //timer: 1000,
            animate: {
                enter: 'animated fadeInDown',
                exit: 'animated fadeOutUp'
            },
            icon_type: 'class'
        });

        //$.notify("Saved");
    }

</script>

<style>
    [data-notify="progressbar"] {
	margin-bottom: 0px;
	position: absolute;
	bottom: 0px;
	left: 0px;
	width: 100%;
	height: 5px;
}
</style>
