@model ColeoWeb.Models.ProjectStatusViewModel

@{
    ViewBag.Title = "Edit";
}

@Scripts.Render("~/Scripts/pick-a-color-1.2.3.min.js")
@Scripts.Render("~/Scripts/tinycolor-0.9.15.min.js")
@Styles.Render("~/Content/pick-a-color-1.2.3.min.css")




<div class="row tile>

    <div class="col-md-12">
        <div class="form-group row">
            <div class="col-md-12">
                <h3 class="title"> Edit Project Status </h3>
            </div>
        </div>
    </div>

    @using (Ajax.BeginForm("Edit",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "edit-projectstatus",
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.Replace,
                            OnSuccess = "ShowList(divList); AlertSave();"
                        },
                        new { @id = "edit-project-status" }))
    {
        @Html.AntiForgeryToken()

        <input type="hidden" id="Id" name="Id" value="@Model.Id" />
        @Html.HiddenFor(m => m.Order);

        <div class="col-md-12">
            <div class="form-group row">
                <div class="col-md-4">
                    <h4> @Html.DisplayNameFor(m => m.Name)</h4>
                </div>
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-4">
                    <h4> @Html.DisplayNameFor(m => m.IsDefault)</h4>
                </div>
                <div class="col-md-7">
                    @{
                        @Html.CheckBoxFor(m => m.IsDefault, new { @id = "is-default" });
                    }
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-4">
                    <h4> @Html.DisplayNameFor(m => m.Color)</h4>
                </div>
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.Color, new { @class = "pick-a-color form-control", @name = "color-picker" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-12">
                    &nbsp;
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12">
                    <div type="submit" class="glyphicon-md pull-right" onclick="SaveItem();">
                        <span class="glyphicon glyphicon-floppy-save"></span> Save
                    </div>
                </div>
            </div>
        </div>
        <input id="item-save" type="submit" class="hidden">
    }

</div>




<script>

    $(document).ready(function () {

        // Set up pick a color
        InitializePickColor();

        // load the toggle
        $(function () {
            $('#is-default').bootstrapToggle();
        })

    });

    function AlertSave() {

        var model = @Html.Raw(Json.Encode(Model));

        if (model["Model"] != null) {
            NotificationAlert('Project status saved!');
        }
    }
</script>


